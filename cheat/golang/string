---
syntax: go
tags:
  - go
  - golang
  - string
---
// A string type represents the set of string values. A string value is a (possibly empty) sequence of bytes. The number of bytes is called the length of the string and is never negative. Strings are immutable: once created, it is impossible to change the contents of a string.

type stringStruct struct {
    str unsafe.Pointer
    len int
}

// The predeclared string type is string; it is a defined type.

var s string

// The length of a string s can be discovered using the built-in function len. The length is a compile-time constant if the string is a constant. A string's bytes can be accessed by integer indices 0 through len(s)-1. It is illegal to take the address of such an element; if s[i] is the i'th byte of a string, &s[i] is invalid.

// Zero value for string is "" (the empty string)

// Size of string as hypothetical variable v as if v was declared via var v = x is 16 bytes
