---
syntax: go
tags:
  - go
  - golang
  - numeric
  - uint
  - uint8
  - uint16
  - uint32
  - int
  - int8
  - int16
  - int32
  - int64
  - float
  - float32
  - float64
  - complex
  - complex64
  - complex128
  - byte
  - rune
  - uintptr
---

// A numeric type represents sets of integer or floating-point values. The predeclared architecture-independent numeric types are:
//  --------------------------------------------------------------------------------------------------
// | Type       | Description                                                                         |
// |------------|-------------------------------------------------------------------------------------|
// | uint8      | the set of all unsigned  8-bit integers (0 to 255)                                  |
// | uint16     | the set of all unsigned 16-bit integers (0 to 65535)                                |
// | uint32     | the set of all unsigned 32-bit integers (0 to 4294967295)                           |
// | uint64     | the set of all unsigned 64-bit integers (0 to 18446744073709551615)                 |
// |            |                                                                                     |
// | int8       | the set of all signed  8-bit integers (-128 to 127)                                 |
// | int16      | the set of all signed 16-bit integers (-32768 to 32767)                             |
// | int32      | the set of all signed 32-bit integers (-2147483648 to 2147483647)                   |
// | int64      | the set of all signed 64-bit integers (-9223372036854775808 to 9223372036854775807) |
// |            |                                                                                     |
// | float32    | the set of all IEEE-754 32-bit floating-point numbers                               |
// | float64    | the set of all IEEE-754 64-bit floating-point numbers                               |
// |            |                                                                                     |
// | complex64  | the set of all complex numbers with float32 real and imaginary parts                |
// | complex128 | the set of all complex numbers with float64 real and imaginary parts                |
// |            |                                                                                     |
// | byte       | alias for uint8                                                                     |
// | rune       | alias for int32                                                                     |
//  --------------------------------------------------------------------------------------------------

// The value of an n-bit integer is n bits wide and represented using two's complement arithmetic.

// There is also a set of predeclared numeric types with implementation-specific sizes:
//  --------------------------------------------------------------------------------------------------
// | Type    | Description                                                                         |
// |---------|-------------------------------------------------------------------------------------|
// | uint    | either 32 or 64 bits                                                                |
// | int     | same size as uint                                                                   |
// | uintptr | an unsigned integer large enough to store the uninterpreted bits of a pointer value |
//  --------------------------------------------------------------------------------------------------

// To avoid portability issues all numeric types are defined types and thus distinct except byte, which is an alias for uint8, and rune, which is an alias for int32. Explicit conversions are required when different numeric types are mixed in an expression or assignment. For instance, int32 and int are not the same type even though they may have the same size on a particular architecture.

// Zero value for numeric type is 0

// Size of numeric type as hypothetical variable v as if v was declared via var v = x is:
//  -----------------------
// | Type       | Size     |
// |------------|----------|
// | uint       | 8 bytes  |
// | uint8      | 1 byte   |
// | uint16     | 2 bytes  |
// | uint32     | 4 bytes  |
// | uint64     | 8 bytes  |
// |            |          |
// | int        | 8 byte   |
// | int8       | 1 byte   |
// | int16      | 2 bytes  |
// | int32      | 4 bytes  |
// | int64      | 8 bytes  |
// |            |          |
// | float32    | 4 bytes  |
// | float64    | 8 bytes  |
// |            |          |
// | complex64  | 8 bytes  |
// | complex128 | 16 bytes |
// |            |          |
// | byte       | 1 byte   |
// | rune       | 4 bytes  |
// | uintptr    | 8 bytes  |
//  -----------------------
